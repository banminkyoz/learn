{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../layouts/Layout';\nimport fetch from 'isomorphic-unfetch';\nimport Markdown from 'react-markdown';\n\nvar Movie = function Movie(props) {\n  return __jsx(Layout, null, __jsx(\"h1\", {\n    className: \"jsx-3897879338\"\n  }, props.show.name), __jsx(\"p\", {\n    className: \"jsx-3897879338\"\n  }, props.show.summary.replace(/<[/]?[pb]>/g, '')), __jsx(\"img\", {\n    src: props.show.image.medium,\n    className: \"jsx-3897879338\"\n  }), __jsx(_JSXStyle, {\n    id: \"2050657956\"\n  }, [\"img.jsx-3897879338{box-shadow:0 1px 3px rgba(0,0,0,0.12),0 1px 2px rgba(0,0,0,0.24);border-radius:4px;}\"]), __jsx(\"div\", {\n    className: \"jsx-3897879338\" + \" \" + \"markdown\"\n  }, __jsx(Markdown, {\n    source: \"\\nThis is our blog post.\\nYes. We can have a [link](/link).\\nAnd we can have a title as well.\\n\\n### This is a title\\n\\nAnd here's the content.\\n      \"\n  })), __jsx(_JSXStyle, {\n    id: \"3362358855\"\n  }, [\".markdown{font-family:'Arial';}\", \".markdown a{-webkit-text-decoration:none;text-decoration:none;color:red;}\", \".markdown a:hover{opacity:0.6;}\", \".markdown h3{margin:0;padding:0;text-transform:uppercase;}\"]));\n};\n\nMovie.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var id, res, show;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = context.query.id;\n            _context.next = 3;\n            return fetch(\"https://api.tvmaze.com/shows/\".concat(id));\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            show = _context.sent;\n            console.log(\"Fetched show \".concat(show.name));\n            return _context.abrupt(\"return\", {\n              show: show\n            });\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Movie;","map":null,"metadata":{},"sourceType":"module"}