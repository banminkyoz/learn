{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport MyLayout from '../components/MyLayout';\nimport marked from 'marked'; // import Highlight from 'react-highlight'\n\nimport dynamic from 'next/dynamic';\nconst Highlight = dynamic(() => import('react-highlight'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-highlight')],\n    modules: ['react-highlight']\n  }\n});\nmarked.setOptions({\n  gfm: true,\n  tables: true,\n  breaks: true\n});\nexport default function withPost(options) {\n  return class PostPage extends React.Component {\n    renderMarkdown() {\n      // If a code snippet contains in the markdown content\n      // Then use Highlight component\n      if (/~~~/.test(options.content)) {\n        return __jsx(\"div\", null, __jsx(Highlight, {\n          innerHTML: true\n        }, marked(options.content)));\n      } // If not, simple render the generated HTML from markdown\n\n\n      return __jsx(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: marked(options.content)\n        }\n      });\n    }\n\n    render() {\n      return __jsx(MyLayout, null, __jsx(\"h1\", null, options.title), this.renderMarkdown());\n    }\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}